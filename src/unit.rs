use crate::item::Item;

// Structure holding an hero item inventory
#[derive(Debug, PartialEq)]
pub struct Inventory {
    slots: [Option<Item>; 6],
}

impl Default for Inventory {
    fn default() -> Self {
        Inventory {
            slots: [None, None, None, None, None, None],
        }
    }
}

impl Inventory {
    fn idx_from_usize(u: u8) -> usize {
        match u as usize {
            1 => 0,
            2 => 1,
            4 => 2,
            5 => 3,
            7 => 4,
            8 => 5,
            other => panic!("Cannot understand item slot number {}", other),
        }
    }

    pub fn use_slot(&mut self, slot: u8) -> Option<Item> {
        self.slots[Inventory::idx_from_usize(slot)].clone() // TODO: item "charges"
    }

    pub fn add_item(&mut self, slot: u8, item: Item) {
        self.slots[Inventory::idx_from_usize(slot)] = Some(item)
    }

    pub fn drop(&mut self, slot: u8) {
        self.slots[Inventory::idx_from_usize(slot)] = None
    }

    pub fn swap(&mut self, slots: (u8, u8)) {
        let idx_1 = Inventory::idx_from_usize(slots.0);
        let idx_2 = Inventory::idx_from_usize(slots.1);
        let fst = self.slots[idx_1].clone();
        self.slots[idx_1] = self.slots[idx_2].clone();
        self.slots[idx_2] = fst;
    }
}

#[derive(Debug, PartialEq, Clone)]
pub enum Unit {
    // NE
    Wisp,
    Archer,
    Huntress,
    GlaiveThrower,
    Dryad,
    DruidOfTheClaw,
    DruidOfTheClawBear,
    MountainGiant,
    DruidOfTheTalon,
    DruidOfTheTalonCrow,
    FaerieDragon,
    Hippogryph,
    HippogryphRider,
    Chimaera,
    Treant,
    OwlScout,
    AvatarOfVengeance,
    SpiritOfVengeance,
    // OR
    Peon,
    Grunt,
    HeadHunter,
    Berserker,
    Demolisher,
    Shaman,
    WitchDoctor,
    SpiritWalker,
    Raider,
    KodoBeast,
    WindRider,
    TrollBatrider,
    Tauren,
    // HU
    Footman,
    Knight,
    Priest,
    MortarTeam,
    Peasant,
    Rifleman,
    Sorceress,
    SiegeEngine,
    GryphonRider,
    FlyingMachine,
    SpellBreaker,
    DragonhawkRider,
    // UD
    Acolyte,
    Abomination,
    Banshee,
    CryptFiend,
    FrostWyrm,
    Gargoyle,
    Ghoul,
    Necromancer,
    Meatwagon,
    Shade,
    ObsidianStatue,
    Destroyer,
    // Summons
    SerpentWard,
    SpiritWolf,
    DireWolf,
    ShadowWolf,
    SkeletonWarrior,
    SkeletalMage,
    CarrionScarab1,
    CarrionScarab2,
    CarrionScarab3,
    CarrionScarab2Burrowed,
    CarrionScarab3Burrowed,
    LavaSpawn1,
    LavaSpawn2,
    LavaSpawn3,
    WaterElemental,
    WaterElemental2,
    WaterElemental3,
    Phoenix,
    PhoenixEgg,
    SpiritBeast1,
    SpiritBeast2,
    SpiritBeast3,
    // TODO:
    // Neutral
    SkeletalMarksman,
    BurningArcher,
    DragonHawk,
    Bandit,
    Rogue,
    Enforcer,
    Assassin,
    BlackDrake,
    RedDragonWhelp,
    BlackDragonWhelp,
    RedDrake,
    BlackDragon,
    RedDragon,
    BlueDragon,
    BlueDragonWhelp,
    BlueDrake,
    BronzeDragon,
    BronzeDrake,
    BronzeDragonWhelp,
    GreenDragon,
    GreenDrake,
    GreenDragonWhelp,
    CentaurArcher,
    CentaurOutrunner,
    CentaurDrudge,
    DarkTrollHighPriest,
    DarkTrollShadowPriest,
    DarkTrollBerserker,
    DarkTrollWarlord,
    DarkTroll,
    DarkTrollTrapper,
    ForestTrollHighPriest,
    ForestTrollShadowPriest,
    ForestTroll,
    ForestTrollBerserker,
    ForestTrollTrapper,
    ForestTrollWarlord,
    MudGolem,
    GoblinShredder,
    FurbolgShaman,
    GnollPoacher,
    GnollAssassin,
    Gnoll,
    GnollBrute,
    GnollWarden,
    GnollOverseer,
    GoblinSapper,
    HarpyRogue,
    HarpyWindwitch,
    IceTrollBerserker,
    IceTrollTrapper,
    Kobold,
    KoboldGeomancer,
    ThunderLizard,
    MurlocFlesheater,
    MurlocHuntsman,
    Wildkin,
    RazormaneMedicineMan,
    NerubianWarrior,
    NerubianWebspinner,
    OgreWarrior,
    OgreMauler,
    OgreLord,
    OgreMagi,
    FrostRevenant,
    SludgeFlinger,
    SatyrShadowdancer,
    SatyrSoulstealer,
    GoblinZeppelin,
    GiantSeaTurtle,
    MakruraDeepseer,
    MakruraSnapper,
    MurgulSnarecaster,
    SpiderCrabShorecrawler,
    TransportShip,
    SpiderCrabLimbripper,
    SpiderCrabBehemoth,
    BlueDragonspawnMeddler,
    MagnataurWarrior,
    BarbedArachnathid,
    PolarFurbolgShaman,
    MagicVault,
    IcyTreasureBox,
    FelBeast,
    DraeneiDarkslayer,
    DraeneiDisciple,
    Voidwalker,
    GreaterVoidwalker,
    NetherDragonHatchling,
    NetherDrake,
    NetherDragon,
}

#[derive(Debug, PartialEq, Clone, Eq, Hash)]
pub enum Hero {
    // NE
    DemonHunter,
    KeeperOfTheGrove,
    PriestessOfTheMoon,
    Warden,
    // OR
    BladeMaster,
    FarSeer,
    TaurenChieftain,
    ShadowHunter,
    // UD
    DeathKnight,
    DreadLord,
    Lich,
    CryptLord,
    // HU
    Archmage,
    MountainKing,
    Paladin,
    BloodMage,
    // Neutral
    NagaSeaWitch,
    DarkRanger,
    PandarenBrewmaster,
    Beastmaster,
    PitLord,
    GoblinTinker,
    FireLord,
    GoblinAlchemist,
}

impl Hero {
    pub(crate) fn from_str(str: &str) -> Option<Hero> {
        match str {
            //NE
            "Edem" => Some(Hero::DemonHunter),
            "Ekee" => Some(Hero::KeeperOfTheGrove),
            "Emoo" => Some(Hero::PriestessOfTheMoon),
            "Ewar" => Some(Hero::Warden),
            // OR
            "Obla" => Some(Hero::BladeMaster),
            "Ofar" => Some(Hero::FarSeer),
            "Otch" => Some(Hero::TaurenChieftain),
            "Oshd" => Some(Hero::ShadowHunter),
            // UD
            "Udea" => Some(Hero::DeathKnight),
            "Udre" => Some(Hero::DreadLord),
            "Ulic" => Some(Hero::Lich),
            "Ucrl" => Some(Hero::CryptLord),
            // HU
            "Hamg" => Some(Hero::Archmage),
            "Hmkg" => Some(Hero::MountainKing),
            "Hpal" => Some(Hero::Paladin),
            "Hblm" => Some(Hero::BloodMage),
            // Neutral
            "Npbm" => Some(Hero::PandarenBrewmaster),
            "Nbrn" => Some(Hero::DarkRanger),
            "Nngs" => Some(Hero::NagaSeaWitch),
            "Nplh" => Some(Hero::PitLord),
            "Nbst" => Some(Hero::Beastmaster),
            "Ntin" => Some(Hero::GoblinTinker),
            "Nfir" => Some(Hero::FireLord),
            "Nalc" => Some(Hero::GoblinAlchemist),
            _ => None,
        }
    }
}

impl Unit {
    pub(crate) fn from_str(str: &str) -> Option<Unit> {
        match str {
            // HU
            "hfoo" => Some(Unit::Footman),
            "hkni" => Some(Unit::Knight),
            "hmpr" => Some(Unit::Priest),
            "hmtm" => Some(Unit::MortarTeam),
            "hpea" => Some(Unit::Peasant),
            "hrif" => Some(Unit::Rifleman),
            "hsor" => Some(Unit::Sorceress),
            "hmtt" => Some(Unit::SiegeEngine),
            "hrtt" => Some(Unit::SiegeEngine),
            "hgry" => Some(Unit::GryphonRider),
            "hgyr" => Some(Unit::FlyingMachine),
            "hspt" => Some(Unit::SpellBreaker),
            "hdhw" => Some(Unit::DragonhawkRider),
            // NE
            "ebal" => Some(Unit::GlaiveThrower),
            "echm" => Some(Unit::Chimaera),
            "edoc" => Some(Unit::DruidOfTheClaw),
            "edcm" => Some(Unit::DruidOfTheClawBear),
            "edot" => Some(Unit::DruidOfTheTalon),
            "edtm" => Some(Unit::DruidOfTheTalonCrow),
            "ewsp" => Some(Unit::Wisp),
            "esen" => Some(Unit::Huntress),
            "earc" => Some(Unit::Archer),
            "edry" => Some(Unit::Dryad),
            "ehip" => Some(Unit::Hippogryph),
            "ehpr" => Some(Unit::HippogryphRider),
            "emtg" => Some(Unit::MountainGiant),
            "efdr" => Some(Unit::FaerieDragon),
            // OR
            "ocat" => Some(Unit::Demolisher),
            "odoc" => Some(Unit::WitchDoctor),
            "ogru" => Some(Unit::Grunt),
            "ohun" => Some(Unit::HeadHunter),
            "otbk" => Some(Unit::Berserker),
            "okod" => Some(Unit::KodoBeast),
            "opeo" => Some(Unit::Peon),
            "orai" => Some(Unit::Raider),
            "oshm" => Some(Unit::Shaman),
            "otau" => Some(Unit::Tauren),
            "owyv" => Some(Unit::WindRider),
            "ospw" => Some(Unit::SpiritWalker),
            "ospm" => Some(Unit::SpiritWalker),
            "otbr" => Some(Unit::TrollBatrider),
            // UD
            "uaco" => Some(Unit::Acolyte),
            "uabo" => Some(Unit::Abomination),
            "uban" => Some(Unit::Banshee),
            "ucry" => Some(Unit::CryptFiend),
            "ufro" => Some(Unit::FrostWyrm),
            "ugar" => Some(Unit::Gargoyle),
            "ugho" => Some(Unit::Ghoul),
            "unec" => Some(Unit::Necromancer),
            "umtw" => Some(Unit::Meatwagon),
            "ushd" => Some(Unit::Shade),
            "uobs" => Some(Unit::ObsidianStatue),
            "ubsp" => Some(Unit::Destroyer),
            // Summons
            "osp1" | "osp2" | "osp3" | "osp4" => Some(Unit::SerpentWard),
            "osw1" => Some(Unit::SpiritWolf),
            "osw2" => Some(Unit::DireWolf),
            "osw3" => Some(Unit::ShadowWolf),
            "uske" => Some(Unit::SkeletonWarrior),
            "uskm" => Some(Unit::SkeletalMage),
            "ucs1" => Some(Unit::CarrionScarab1),
            "ucs2" => Some(Unit::CarrionScarab2),
            "ucs3" => Some(Unit::CarrionScarab3),
            "ucsB" => Some(Unit::CarrionScarab2Burrowed),
            "ucsC" => Some(Unit::CarrionScarab3Burrowed),
            "nlv1" => Some(Unit::LavaSpawn1),
            "nlv2" => Some(Unit::LavaSpawn2),
            "nlv3" => Some(Unit::LavaSpawn3),
            "hwat" => Some(Unit::WaterElemental),
            "hwt2" => Some(Unit::WaterElemental2),
            "hwt3" => Some(Unit::WaterElemental3),
            "hphx" => Some(Unit::Phoenix),
            "hpxe" => Some(Unit::PhoenixEgg),
            "nsw1" => Some(Unit::SpiritBeast1),
            "nsw2" => Some(Unit::SpiritBeast2),
            "nsw3" => Some(Unit::SpiritBeast3),
            // Neutral
            "nskm" => Some(Unit::SkeletalMarksman),
            "nskf" => Some(Unit::BurningArcher),
            "nws1" => Some(Unit::DragonHawk),
            "nban" => Some(Unit::Bandit),
            "nrog" => Some(Unit::Rogue),
            "nenf" => Some(Unit::Enforcer),
            "nass" => Some(Unit::Assassin),
            "nbdk" => Some(Unit::BlackDrake),
            "nrdk" => Some(Unit::RedDragonWhelp),
            "nbdr" => Some(Unit::BlackDragonWhelp),
            "nrdr" => Some(Unit::RedDrake),
            "nbwm" => Some(Unit::BlackDragon),
            "nrwm" => Some(Unit::RedDragon),
            "nadr" => Some(Unit::BlueDragon),
            "nadw" => Some(Unit::BlueDragonWhelp),
            "nadk" => Some(Unit::BlueDrake),
            "nbzd" => Some(Unit::BronzeDragon),
            "nbzk" => Some(Unit::BronzeDrake),
            "nbzw" => Some(Unit::BronzeDragonWhelp),
            "ngrd" => Some(Unit::GreenDragon),
            "ngdk" => Some(Unit::GreenDrake),
            "ngrw" => Some(Unit::GreenDragonWhelp),
            "ncea" => Some(Unit::CentaurArcher),
            "ncen" => Some(Unit::CentaurOutrunner),
            "ncer" => Some(Unit::CentaurDrudge),
            "ndth" => Some(Unit::DarkTrollHighPriest),
            "ndtp" => Some(Unit::DarkTrollShadowPriest),
            "ndtb" => Some(Unit::DarkTrollBerserker),
            "ndtw" => Some(Unit::DarkTrollWarlord),
            "ndtr" => Some(Unit::DarkTroll),
            "ndtt" => Some(Unit::DarkTrollTrapper),
            "nfsh" => Some(Unit::ForestTrollHighPriest),
            "nfsp" => Some(Unit::ForestTrollShadowPriest),
            "nftr" => Some(Unit::ForestTroll),
            "nftb" => Some(Unit::ForestTrollBerserker),
            "nftt" => Some(Unit::ForestTrollTrapper),
            "nftk" => Some(Unit::ForestTrollWarlord),
            "ngrk" => Some(Unit::MudGolem),
            "ngir" => Some(Unit::GoblinShredder),
            "nfrs" => Some(Unit::FurbolgShaman),
            "ngna" => Some(Unit::GnollPoacher),
            "ngns" => Some(Unit::GnollAssassin),
            "ngno" => Some(Unit::Gnoll),
            "ngnb" => Some(Unit::GnollBrute),
            "ngnw" => Some(Unit::GnollWarden),
            "ngnv" => Some(Unit::GnollOverseer),
            "ngsp" => Some(Unit::GoblinSapper),
            "nhrr" => Some(Unit::HarpyRogue),
            "nhrw" => Some(Unit::HarpyWindwitch),
            "nits" => Some(Unit::IceTrollBerserker),
            "nitt" => Some(Unit::IceTrollTrapper),
            "nkob" => Some(Unit::Kobold),
            "nkog" => Some(Unit::KoboldGeomancer),
            "nthl" => Some(Unit::ThunderLizard),
            "nmfs" => Some(Unit::MurlocFlesheater),
            "nmrr" => Some(Unit::MurlocHuntsman),
            "nowb" => Some(Unit::Wildkin),
            "nrzm" => Some(Unit::RazormaneMedicineMan),
            "nnwa" => Some(Unit::NerubianWarrior),
            "nnwl" => Some(Unit::NerubianWebspinner),
            "nogr" => Some(Unit::OgreWarrior),
            "nogm" => Some(Unit::OgreMauler),
            "nogl" => Some(Unit::OgreLord),
            "nomg" => Some(Unit::OgreMagi),
            "nrvs" => Some(Unit::FrostRevenant),
            "nslf" => Some(Unit::SludgeFlinger),
            "nsts" => Some(Unit::SatyrShadowdancer),
            "nstl" => Some(Unit::SatyrSoulstealer),
            "nzep" => Some(Unit::GoblinZeppelin),
            "ntrt" => Some(Unit::GiantSeaTurtle),
            "nlds" => Some(Unit::MakruraDeepseer),
            "nlsn" => Some(Unit::MakruraSnapper),
            "nmsn" => Some(Unit::MurgulSnarecaster),
            "nscb" => Some(Unit::SpiderCrabShorecrawler),
            "nbot" => Some(Unit::TransportShip),
            "nsc2" => Some(Unit::SpiderCrabLimbripper),
            "nsc3" => Some(Unit::SpiderCrabBehemoth),
            "nbdm" => Some(Unit::BlueDragonspawnMeddler),
            "nmgw" => Some(Unit::MagnataurWarrior),
            "nanb" => Some(Unit::BarbedArachnathid),
            "nanm" => Some(Unit::BarbedArachnathid),
            "nfps" => Some(Unit::PolarFurbolgShaman),
            "nmgv" => Some(Unit::MagicVault),
            "nitb" => Some(Unit::IcyTreasureBox),
            "npfl" => Some(Unit::FelBeast),
            "ndrd" => Some(Unit::DraeneiDarkslayer),
            "ndrm" => Some(Unit::DraeneiDisciple),
            "nvdw" => Some(Unit::Voidwalker),
            "nvdg" => Some(Unit::GreaterVoidwalker),
            "nnht" => Some(Unit::NetherDragonHatchling),
            "nndk" => Some(Unit::NetherDrake),
            "nndr" => Some(Unit::NetherDragon),
            _ => None,
        }
    }
}
